{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appSharedResourceGroup": {
      "type": "string"
    },
    "appSharedStorageAccountName": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "enableAlerts": {
      "type": "bool",
      "metadata": {
        "description": "Enable or disable alerting"
      }
    },
    "ExceptionCountThreshold": {
      "type": "string"
    },
    "CPUPercentageThreshold": {
      "type": "string"
    },
    "MemoryPercentageThreshold": {
      "type": "string"
    },
    "apimServiceName": {
      "type": "string"
    },
    "apimProductName": {
      "type": "string"
    },
    "apimApiName": {
      "type": "string"
    },
    "apimLoggerName": {
      "type": "string"
    },
    "apimResourceGroup": {
      "type": "string"
    },
    "clientId": {
      "type": "string"
    },
    "clientSecret": {
      "type": "securestring"
    }
  },
  "variables": {
    "appServicePlanName": "[concat(variables('resourcePrefix'), '-asp')]",
    "appServicePlanResourceGroup": "[concat(variables('resourcePrefix'),'-rg')]",
    "appServicePlanId": "[resourceId(variables('appServicePlanResourceGroup'), 'Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
    "buildingBlocksDfcBaseUrl": "https://raw.githubusercontent.com/olusola-adio/mon-devops/master/ArmTemplates/",
    "resourcePrefix": "[tolower(concat('mon-', tolower(parameters('Environment')), '-api-calc'))]",
    "functionAppName": "[concat(variables('ResourcePrefix'), '-fa')]",
    "functionAppInsightsName": "[concat(variables('resourcePrefix'), '-ai')]",
    // "logAnalyticsWorkspaceName": "[concat(variables('resourcePrefix'),'-la')]",
    "apimApiName": "[concat(parameters('apimProductName'), '-', parameters('apimApiName'))]",
    "ActionGroupName": "[concat('mon-', tolower(parameters('Environment')), '-app-sharedresources-actgrp')]"
  },
  "resources": [
    // {
    //   "type": "Microsoft.OperationalInsights/workspaces",
    //   "name": "[variables('logAnalyticsWorkspaceName')]",
    //   "apiVersion": "2020-08-01",
    //   "location": "[resourceGroup().location]",
    //   "properties": {
    //     "resourceGroup": {
    //       "name": "[resourceGroup().name]"
    //     },
    //     "sku": {
    //       "name": "pergb2018"
    //     }
    //   }
    // },
    {
      "name": "[concat('apim-logger-', parameters('apimLoggerName'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('apimResourceGroup')]",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'APIM/apim-logger.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimServiceName": {
            "value": "[parameters('apimServiceName')]"
          },
          "productDisplayName": {
            "value": "[parameters('apimProductName')]"
          }
        }
      }
    },
    {
      "name": "[concat('apim-product-', parameters('apimProductName'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('apimResourceGroup')]",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'APIM/apim-product.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "allowAnonymousAccess": {
            "value": false
          },
          "apimServiceName": {
            "value": "[parameters('apimServiceName')]"
          },
          "productDisplayName": {
            "value": "[parameters('apimProductName')]"
          },
          "productDescription": {
            "value": "[parameters('apimProductName')]"
          }
        }
      }
    },
    {
      "name": "[concat('apim-api-', variables('apimApiName'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('apimResourceGroup')]",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'APIM/apim-api.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimLoggerName": {
            "value": "[parameters('apimLoggerName')]"
          },
          "apimProductInstanceName": {
            "value": "[parameters('apimProductName')]"
          },
          "apimServiceName": {
            "value": "[parameters('apimServiceName')]"
          },
          "apiName": {
            "value": "[variables('apimApiName')]"
          }
        }
      },
      "dependsOn": [
        "[concat('apim-product-', parameters('apimProductName'))]",
        "[concat('apim-logger-', parameters('apimLoggerName'))]"
      ]
    },
    {
      "apiVersion": "2018-02-01",
      "name": "[variables('appServicePlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('appServicePlanName')]",
        "computeMode": "Dynamic"
      },
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('functionAppInsightsName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('functionAppInsightsName')]"
          },
          "attachedService": {
            "value": ""
          }
        }
      }
    },
    // {
    //   "type": "microsoft.insights/components",
    //   "apiVersion": "2020-02-02",
    //   "name": "[variables('functionAppInsightsName')]",
    //   "location": "[resourceGroup().location]",
    //   "kind": "web",
    //   "properties": {
    //     "Application_Type": "web",
    //     "Flow_Type": "Redfield",
    //     "Request_Source": "Custom",
    //     "RetentionInDays": 90,
    //     "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
    //     "IngestionMode": "LogAnalytics",
    //     "publicNetworkAccessForIngestion": "Enabled",
    //     "publicNetworkAccessForQuery": "Enabled"
    //   },
    //   "dependsOn": [
    //     "[variables('logAnalyticsWorkspaceName')]"
    //   ]
    // },
    {

      "name": "[variables('functionAppName')]",
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[variables('appServicePlanId')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "MSDEPLOY_RENAME_LOCKED_FILES",
              "value": "1"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('appSharedStorageAccountName'),';AccountKey=',listKeys(resourceId(parameters('appSharedResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('appSharedStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('appSharedStorageAccountName'),';AccountKey=',listKeys(resourceId(parameters('appSharedResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('appSharedStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(variables('functionAppInsightsName')).outputs.InstrumentationKey.value]"
            },
            {
              "name": "MICROSOFT_PROVIDER_AUTHENTICATION_SECRET",
              "value": "[parameters('clientSecret')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[variables('functionAppInsightsName')]",
        "[variables('appServicePlanName')]"
      ]
    },
    {
      "name": "[concat(variables('functionAppName'), '/authsettingsV2')]",
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2020-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('functionAppName')]"
      ],
      "properties": {
        "platform": {
          "enabled": true,
          "runtimeVersion": "~1"
        },
        "globalValidation": {
          "requireAuthentication": true,
          "unauthenticatedClientAction": "RedirectToLoginPage",
          "redirectToProvider": "azureactivedirectory"
        },
        "identityProviders": {
          "azureActiveDirectory": {
            "enabled": true,
            "registration": {
              "openIdIssuer": "[concat('https://sts.windows.net/',tenant().tenantId,'/v2.0')]",
              "clientId": "[parameters('clientId')]",
              "clientSecretSettingName": "MICROSOFT_PROVIDER_AUTHENTICATION_SECRET"
            },
            "login": {
              "disableWWWAuthenticate": false
            },
            "validation": {
              "jwtClaimChecks": {},
              "allowedAudiences": [],
              "defaultAuthorizationPolicy": {
                "allowedPrincipals": {}
              }
            }
          },
          "facebook": {
            "enabled": true,
            "registration": {},
            "login": {}
          },
          "gitHub": {
            "enabled": true,
            "registration": {},
            "login": {}
          },
          "google": {
            "enabled": true,
            "registration": {},
            "login": {},
            "validation": {}
          },
          "twitter": {
            "enabled": true,
            "registration": {}
          },
          "legacyMicrosoftAccount": {
            "enabled": true,
            "registration": {},
            "login": {},
            "validation": {}
          },
          "apple": {
            "enabled": true,
            "registration": {},
            "login": {}
          }
        },
        "login": {
          "routes": {},
          "tokenStore": {
            "enabled": true,
            "tokenRefreshExtensionHours": 72,
            "fileSystem": {},
            "azureBlobStorage": {}
          },
          "preserveUrlFragmentsForLogins": false,
          "cookieExpiration": {
            "convention": "FixedTime",
            "timeToExpiration": "08:00:00"
          },
          "nonce": {
            "validateNonce": true,
            "nonceExpirationInterval": "00:05:00"
          }
        },
        "httpSettings": {
          "requireHttps": true,
          "routes": {
            "apiPrefix": "/.auth"
          },
          "forwardProxy": {
            "convention": "NoProxy"
          }
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[concat(variables('functionAppInsightsName'), '-metric-exceptions')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[variables('functionAppInsightsName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "alertName": {
            "value": "[concat(variables('functionAppInsightsName'), '-metric-exceptions')]"
          },
          "alertSeverity": {
            "value": 3
          },
          "metricName": {
            "value": "exceptions/count"
          },
          "operator": {
            "value": "GreaterThan"
          },
          "threshold": {
            "value": "[parameters('ExceptionCountThreshold')]"
          },
          "aggregation": {
            "value": "Count"
          },
          "windowSize": {
            "value": "PT5M"
          },
          "evaluationFrequency": {
            "value": "PT1M"
          },
          "actionGroupName": {
            "value": "[variables('ActionGroupName')]"
          },
          "actionGroupResourceGroup": {
            "value": "[parameters('appSharedResourceGroup')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Insights/Components', variables('functionAppInsightsName'))]"
          }
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[concat(variables('functionAppInsightsName'), '-failure-anomaly-v2')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[variables('functionAppInsightsName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/failure-anomaly-rule.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "alertName": {
            "value": "[concat(variables('functionAppInsightsName'), '-failure-anomaly-v2')]"
          },
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Insights/Components', variables('functionAppInsightsName'))]"
          },
          "actionGroupId": {
            "value": "[resourceId(parameters('appSharedResourceGroup'), 'microsoft.insights/actionGroups', variables('ActionGroupName'))]"
          }
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[concat(variables('AppServicePlanName'), '-CPUPercentage')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "alertName": {
            "value": "[concat(variables('AppServicePlanName'), '-metric-CPUPercentage')]"
          },
          "alertSeverity": {
            "value": 3
          },
          "metricName": {
            "value": "CpuPercentage"
          },
          "operator": {
            "value": "GreaterThanOrEqual"
          },
          "threshold": {
            "value": "[parameters('CPUPercentageThreshold')]"
          },
          "aggregation": {
            "value": "Average"
          },
          "windowSize": {
            "value": "PT5M"
          },
          "evaluationFrequency": {
            "value": "PT1M"
          },
          "actionGroupName": {
            "value": "[variables('ActionGroupName')]"
          },
          "actionGroupResourceGroup": {
            "value": "[parameters('appSharedResourceGroup')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Web/serverFarms', variables('AppServicePlanName'))]"
          }
        }
      },
      "dependsOn": [
        "[variables('AppServicePlanName')]"
      ]
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[concat(variables('AppServicePlanName'), '-MemoryPercentage')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "alertName": {
            "value": "[concat(variables('AppServicePlanName'), '-metric-MemoryPercentage')]"
          },
          "alertSeverity": {
            "value": 3
          },
          "metricName": {
            "value": "MemoryPercentage"
          },
          "operator": {
            "value": "GreaterThanOrEqual"
          },
          "threshold": {
            "value": "[parameters('MemoryPercentageThreshold')]"
          },
          "aggregation": {
            "value": "Average"
          },
          "windowSize": {
            "value": "PT5M"
          },
          "evaluationFrequency": {
            "value": "PT1M"
          },
          "actionGroupName": {
            "value": "[variables('ActionGroupName')]"
          },
          "actionGroupResourceGroup": {
            "value": "[parameters('appSharedResourceGroup')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Web/serverFarms', variables('AppServicePlanName'))]"
          }
        }
      },
      "dependsOn": [
        "[variables('AppServicePlanName')]"
      ]
    }
  ],
  "outputs": {
  }
}
